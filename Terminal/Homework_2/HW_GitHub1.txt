TXT
 1. Создать внешний репозиторий c названием TXT === https://github.com/SiarheiShaitar/TXT.git
 2. Клонировать репозиторий TXT на локальный компьютер === Git clone https://github.com/SiarheiShaitar/TXT.git
 3. Внутри локального TXT создать файл “new.txt” === Touch new.txt
 4. Добавить файл под гит === Git add
 5. Закоммитить файл === Git commit -m "add text in new.txt"
 6. Отправить файл на внешний GitHub репозиторий === Git push
 7. Отредактировать содержание файла “new.txt” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате TXT. === vim new.txt ->i -> вводим необходимую информацию -> esc -> w -> q 
 8. Отправить изменения на внешний репозиторий === Git status -> git add -> git commit -m "add text in new.txt" -> git push
 9. Создать файл preferences.txt === touch preferences.txt
 10. В файл preferences.txt” добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате TXT === Vim preferences.txt -> i -> вводим необходимую информацию -> esc -> w -> q 
 11. Создать файл sklls.txt добавить информацию о скиллах которые будут изучены на курсе в формате TXT === touch skills.txt -> vim skills.txt -> i -> вводим необходимую информацию -> esc -> w -> q 
 12. Сделать коммит в одну строку === git status -> git commit -am "add files about me"
 13. Отправить сразу 2 файла на внешний репозиторий === git push
 14. На веб интерфейсе создать файл bug_report.txt === в репозитории TXT (на Github) создаем файл bug_report.txt 
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе === в строке commit changes вписываем название изменений файла, нажимаем зеленую кнопку commit changes
 16. На веб интерфейсе модифицировать файл bug_report.txt, добавить баг репорт в формате TXT === нажимаем в файле bug_report.txt справа на карандаш (edit this file) -> вносим необходимую информацию
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе ===  в строке commit changes вписываем название изменений файла, нажимаем зеленую кнопку commit changes
 18. Синхронизировать внешний и локальный репозиторий TXT === git pull


JSON
 1. Создать внешний репозиторий c названием JSON === https://github.com/SiarheiShaitar/JSON.git
 2. Клонировать репозиторий JSON на локальный компьютер === git clone https://github.com/SiarheiShaitar/JSON.git
 3. Внутри локального JSON создать файл “new.json” 
 4. Добавить файл под гит === git add
 5. Закоммитить файл === git commit -m "test json"
 6. Отправить файл на внешний GitHub репозиторий === git push
 7. Отредактировать содержание файла “new.json” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате JSON === === vim new.json ->i -> вводим необходимую информацию -> esc -> w -> q 
 8. Отправить изменения на внешний репозиторий === Git status -> git add -> git commit -m "about myself new.json" -> git push
 9. Создать файл preferences.json === touch preferences.json
 10. В файл preferences.json добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате JSON === Vim preferences.json -> i -> вводим необходимую информацию -> esc -> w -> q 
 11. Создать файл sklls.json добавить информацию о скиллах которые будут изучены на курсе в формате JSON === === touch skills.json -> vim skills.json -> i -> вводим необходимую информацию -> esc -> w -> q 
 12. Отправить сразу 2 файла на внешний репозиторий === git status -> git commit -am "edit files json" -> git push
 13. На веб интерфейсе создать файл bug_report.json === в репозитории JSON (на Github) создаем файл bug_report.json
 14. Сделать Commit changes (сохранить) изменения на веб интерфейсе === в строке commit changes вписываем название изменений файла, нажимаем зеленую кнопку commit changes
 15. На веб интерфейсе модифицировать файл bug_report.json, добавить баг репорт в формате JSON === === нажимаем в файле bug_report.json справа на карандаш (edit this file) -> вносим необходимую информацию
 16. Сделать Commit changes (сохранить) изменения на веб интерфейсе ===  в строке commit changes вписываем название изменений файла, нажимаем зеленую кнопку commit changes
 17. Синхронизировать внешний и локальный репозиторий JSON === git pull


XML
 1. Создать внешний репозиторий c названием XML ==== https://github.com/SiarheiShaitar/XML.git
 2. Клонировать репозиторий XML на локальный компьютер === git clone https://github.com/SiarheiShaitar/XML.git
 3. Внутри локального XML создать файл “new.xml” === touch new.mxl
 4. Добавить файл под гит === git add
 5. Закоммитить файл === git commit -m "edit new.xml"
 6. Отправить файл на внешний GitHub репозиторий 
 7. Отредактировать содержание файла “new.xml” - написать информацию о себе (ФИО, возраст, количество домашних животных, будущая желаемая зарплата). Всё написать в формате XML === === vim new.xml ->i -> вводим необходимую информацию -> esc -> w -> q 
 8. Отправить изменения на внешний репозиторий === git push
 9. Создать файл preferences.xml === touch preferences.xml
 10. В файл preferences.xml добавить информацию о своих предпочтениях (Любимый фильм, любимый сериал, любимая еда, любимое время года, сторона которую хотели бы посетить) в формате XML === Vim preferences.xml -> i -> вводим необходимую информацию -> esc -> w -> q 
 11. Создать файл sklls.xml добавить информацию о скиллах которые будут изучены на курсе в формате XML === touch skills.xml -> vim skills.xml -> i -> вводим необходимую информацию -> esc -> w -> q 
 12. Сделать коммит в одну строку === git status -> git commit -am "add files about me"
 13. Отправить сразу 2 файла на внешний репозиторий === git push
 14. На веб интерфейсе создать файл bug_report.xml === в репозитории XML (на Github) создаем файл bug_report.xml
 15. Сделать Commit changes (сохранить) изменения на веб интерфейсе === в строке commit changes вписываем название изменений файла, нажимаем зеленую кнопку commit changes
 16. На веб интерфейсе модифицировать файл bug_report.xml, добавить баг репорт в формате XML === нажимаем в файле bug_report.xml справа на карандаш (edit this file) -> вносим необходимую информацию
 17. Сделать Commit changes (сохранить) изменения на веб интерфейсе ===  в строке commit changes вписываем название изменений файла, нажимаем зеленую кнопку commit changes
 18. Синхронизировать внешний и локальный репозиторий XML === git pull